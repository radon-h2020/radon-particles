tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints"
topology_template:
  node_templates:
    AwsLambdaFunction_1:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "909"
        y: "250"
        displayName: "GetToDoItem"
      properties:
        handler: "get.handler"
        memory: 128
        memory_range: null
        runtime: "nodejs12.x"
        statement_id: "get-stmt"
        timeout: 300
        env_vars: { TODOS_TABLE: items }
        concurrency: null
        entries: null
        environment: null
        name: "get-todo"
        alias: "dev"
        concurrency_range: null
        zip_file: "get.zip"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_1
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_3
            capability: host
      artifacts:
        get-item:
          type: radon.artifacts.archive.Zip
          file: get.zip
    AwsDynamoDBTable_0:
      type: radon.nodes.aws.AwsDynamoDBTable
      metadata:
        x: "1385"
        y: "290"
        displayName: "ItemsTable"
      properties:
        range_key_name: null
        hash_key_name: "id"
        password: null
        read_capacity: 1
        range_key_type: null
        port: null
        name: null
        write_capacity: 1
        hash_key_type: "STRING"
        user: null
        table_name: "items"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_0
            capability: host
    AwsLambdaFunction_0:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "940"
        y: "115"
        displayName: "ListToDoItems"
      properties:
        handler: "list.handler"
        memory: 128
        memory_range: null
        runtime: "nodejs12.x"
        statement_id: "list-statement"
        timeout: 300
        env_vars: { TODOS_TABLE: items }
        concurrency: null
        entries: null
        environment: null
        name: "list-todos"
        alias: "dev"
        concurrency_range: null
        zip_file: "list.zip"
      requirements:
        - endpoint:
            node: AwsDynamoDBTable_0
            relationship: con_ConnectsTo_0
            capability: database_endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_1
            capability: host
      artifacts:
        list_function:
          type: radon.artifacts.archive.Zip
          file: list.zip
    AwsPlatform_0:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "602"
        y: "623"
        displayName: "AwsPlatform"
      properties:
        name: "AWS"
        region: "eu-central-1"
    AwsApiGateway_0:
      type: radon.nodes.aws.AwsApiGateway
      metadata:
        x: "335"
        y: "112"
        displayName: "AwsApiGateway"
      properties:
        api_title: "ServerlessToDoListAPI"
        api_version: "1.0.0"
        api_description: "a simple serverless API example"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_2
            capability: host
        - invoker:
            node: AwsLambdaFunction_0
            relationship: con_ApiGatewayTriggers_0
            capability: invocable
        - invoker:
            node: AwsLambdaFunction_1
            relationship: con_ApiGatewayTriggers_1
            capability: invocable
  relationship_templates:
    con_ApiGatewayTriggers_0:
      type: radon.relationships.aws.ApiGatewayTriggers
      properties:
        endpoint: "/todos"
        http_methods: "get"
        events: null
        interactions: null
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_3:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: radon.relationships.abstract.ConnectsTo
      properties:
        credential: null
        interactions: null
    con_ConnectsTo_1:
      type: radon.relationships.abstract.ConnectsTo
      properties:
        credential: null
        interactions: null
    con_ApiGatewayTriggers_1:
      type: radon.relationships.aws.ApiGatewayTriggers
      properties:
        endpoint: "/todos/{id}"
        http_methods: "get"
        events: null
        interactions: null
