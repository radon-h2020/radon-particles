tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints.monitoring"
topology_template:
  inputs:
    function_memory:
      type: string
      required: true
    host_ip:
      type: string
      required: true
    user_email:
      type: string
      required: true
    grafana_api_ip:
      type: string
      required: true
    ec2_ssh_key_file:
      type: string
      required: true
    function_entry_point:
      type: string
      required: true
    ec2_ssh_user:
      type: string
      required: true
    function_location:
      type: string
      required: true
    ec2_image:
      type: string
      required: true
    aws_platform_region:
      type: string
      required: true
    function_timeout:
      type: string
      required: true
    bucket_location:
      type: string
      required: true
    project_id:
      type: string
      required: true
    bucket_function_name:
      type: string
      required: true
    ec2_vpc_subnet_id:
      type: string
      required: true
    pushgateway_service_port:
      type: string
      required: true
    ec2_instance_type:
      type: string
      required: true
    function_name:
      type: string
      required: true
    consul_ip:
      type: string
      required: true
    function_runtime:
      type: string
      required: true
    ec2_ssh_key_name:
      type: string
      required: true
    bucket_out_name:
      type: string
      required: true
    service_account_file:
      type: string
      required: true
    zip_file:
      type: string
      required: true
    bucket_in_name:
      type: string
      required: true
  node_templates:
    DockerEngine_0:
      type: radon.nodes.docker.DockerEngine
      metadata:
        x: "745"
        y: "143"
        displayName: "DockerEngine"
      requirements:
        - host:
            node: EC2_0
            relationship: con_HostedOn_1
            capability: host
    GoogleCloudBucket_0:
      type: radon.nodes.google.GoogleCloudBucket
      metadata:
        x: "342"
        y: "414"
        displayName: "GoogleCloudBucket"
      properties:
        name: { get_input: bucket_in_name }
        component_version: "tosca_simple_yaml_1_3"
      requirements:
        - host:
            node: GoogleCloudPlatform_0
            relationship: con_HostedOn_4
            capability: host
    GoogleCloudBucketTriggeredFunction_0:
      type: radon.nodes.google.GoogleCloudBucketTriggeredFunction
      metadata:
        x: "805"
        y: "389"
        displayName: "GoogleCloudBucketTriggeredFunction"
      properties:
        function_memory: { get_input: function_memory }
        environment_variables: {}
        function_timeout: { get_input: function_timeout }
        trigger_bucket_name: { get_input: bucket_in_name }
        function_bucket_name: { get_input: bucket_function_name }
        function_name: { get_input: function_name }
        name: { get_input: function_name }
        function_runtime: { get_input: function_runtime }
        zip_file: { get_input: zip_file }
        function_entry_point: { get_input: function_entry_point }
      requirements:
        - host:
            node: GoogleCloudPlatform_0
            relationship: con_HostedOn_3
            capability: host
        - endpoint:
            node: GoogleCloudBucket_0
            relationship: con_ConnectsTo_0
            capability: storage_endpoint
        - endpoint:
            node: GoogleCloudBucket_1
            relationship: con_ConnectsTo_1
            capability: storage_endpoint
        - monitor:
            node: PushGateway_0
            relationship: con_GCPIsMonitoredBy_0
            capability: monitor
    PushGateway_0:
      type: radon.nodes.monitoring.PushGateway
      metadata:
        x: "818"
        y: "87"
        displayName: "PushGateway"
      properties:
        user_email: { get_input: user_email }
        pushgateway_service_port: { get_input: pushgateway_service_port }
        grafana_api_ip: { get_input: grafana_api_ip }
        consul_ip: { get_input: consul_ip }
      requirements:
        - host:
            node: DockerEngine_0
            relationship: con_HostedOn_2
            capability: host
        - dependency:
            node: EC2_0
            relationship: con_DependsOn_0
            capability: binding
      artifacts:
        create:
          type: radon.artifacts.Ansible
          file: /nodetypes/radon.nodes.monitoring/PushGateway/files/create.yml
    AwsPlatform_0:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "268"
        y: "144"
        displayName: "AwsPlatform"
      properties:
        name: "Monitoring AWS Platform"
        region: { get_input: aws_platform_region }
    GoogleCloudPlatform_0:
      type: radon.nodes.google.GoogleCloudPlatform
      metadata:
        x: "571"
        y: "149"
        displayName: "GoogleCloudPlatform"
      properties:
        project_id: { get_input: project_id }
        name: "GCP Hosting Platform"
        region: { get_input: bucket_location }
      requirements:
        - dependency:
            node: PushGateway_0
            relationship: con_DependsOn_1
            capability: binding
    GoogleCloudBucket_1:
      type: radon.nodes.google.GoogleCloudBucket
      metadata:
        x: "820"
        y: "650"
        displayName: "GoogleCloudBucket"
      properties:
        name: { get_input: bucket_function_name }
        component_version: "v1"
      requirements:
        - host:
            node: GoogleCloudPlatform_0
            relationship: con_HostedOn_5
            capability: host
    EC2_0:
      type: radon.nodes.VM.EC2
      metadata:
        x: "276"
        y: "360"
        displayName: "EC2"
      properties:
        image: { get_input: ec2_image }
        ssh_key_name: { get_input: ec2_ssh_key_name }
        vpc_subnet_id: { get_input: ec2_vpc_subnet_id }
        instance_type: { get_input: ec2_instance_type }
        ssh_key_file: { get_input: ec2_ssh_key_file }
        ssh_user: { get_input: ec2_ssh_user }
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_0
            capability: host
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_DependsOn_0:
      type: tosca.relationships.DependsOn
    con_HostedOn_3:
      type: tosca.relationships.HostedOn
    con_DependsOn_1:
      type: tosca.relationships.DependsOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: radon.relationships.ConnectsTo
    con_ConnectsTo_1:
      type: radon.relationships.ConnectsTo
    con_GCPIsMonitoredBy_0:
      type: radon.relationships.GCPIsMonitoredBy
    con_HostedOn_4:
      type: tosca.relationships.HostedOn
    con_HostedOn_5:
      type: tosca.relationships.HostedOn
