tosca_definitions_version: tosca_simple_yaml_1_0

#---------------------------------------------------------------------------
# Copyright (c) 2019 Contributors to the RADON project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------

node_types:
  radon.nodes.apache.openwhisk.OpenWhiskPlatform:
    derived_from: radon.nodes.abstract.CloudPlatform
    attributes:
      api_url:
        type: string
        default:  { concat: ["http://", get_property: [SELF, api_host], get_property: [SELF, api_port] ] }
      auth_key:
        type: string
        default: { concat: [get_property: [SELF, auth_username], get_property: [SELF, auth_password] ] }
    properties:
      default_namespace:
        type: string
        required: true
      kubernetes_version:
        type: version
        required: false
        default: 1.8
      auth_username:
        type: string
        required: true
        description: the username part of the authorization key used to gain access to the OpenWhisk API
      auth_password:
        type: string
        required: true
        description: the password part of the authorization key used to gain access to the OpenWhisk API
      api_port:
        type: integer
        required: true
        default: 31001
      api_host:
        type: string
        required: true
    capabilities:
      host:
        type: tosca.capabilities.Container
        valid_source_types:
          - radon.nodes.openfaas.OpenWhiskFunction
    interfaces:
      Standard:
        create:
          inputs:
            KUBERNETES_VERSION:
              type: version
              default: { get_property: [SELF, kubernetes_version] }
              required: false
        configure:
          inputs:
            API_URL:
              type: string
              default: { get_attribute: [SELF, api_url] }
            AUTH_KEY:
              type: string
              default: { get_attribute: [SELF, auth_key] }