tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.apache.nifi.NifiPipeline:
    derived_from: radon.nodes.abstract.DataPipeline
    attributes:
      id:
        type: string
        description: Unique ID of the pipeline
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: radon.nodes.apache.nifi.Nifi
          relationship: tosca.relationships.HostedOn
      - connect:
          capability: tosca.capabilities.Endpoint
          node: radon.nodes.apache.nifi.NifiPipeline
          relationship: tosca.relationships.ConnectsTo
          occurrences: [0, 1]
    capabilities:
      connect:
        type: tosca.capabilities.Endpoint
        description: Capability to receive data from other pipeline nodes
        valid_source_type: [ radon.nodes.apache.nifi.NifiPipeline ]
        occurrences: [0, UNBOUNDED]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        create:
          inputs:
            template_file:  { default: { get_artifact: [ SELF, pipeline_template ] } }
            template_name:  { default: { get_property: [ SELF, name ] } }
          implementation: files/create.yml
        start:
          inputs:
            pipeline_id: { default: { get_attribute: [ SELF, id ] } }
          implementation: files/start.yml
        stop:
          inputs:
            pipeline_id: { default: { get_attribute: [ SELF, id ] } }
          implementation: files/stop.yml
        configure:
          inputs:
            pipeline_id: { default: { get_attribute: [ SELF, id ] } }
          implementation: files/configure.yml
        delete:
          inputs:
            pipeline_id: { default: { get_attribute: [ SELF, id ] } }
          implementation: files/delete.yml
