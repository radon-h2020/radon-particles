---
- hosts: all
  vars: 
    query: "resources[?name=='{{template_name}}' && starts_with(identifier, '/templates/')].identifier"
  tasks:

    - name: Copy template file to remote system (shell command requires file to be in remote system)
      copy:
        src: "{{ template_file }}"
        dest: template.xml

    - name: Wait for port 8080 to become open on the host, don't start checking for 4 seconds
      wait_for:
        port: 8080
        delay: 4

    - name: upload template file to NiFi template repository
      shell: 'curl  -X "POST" "http://localhost:8080/nifi-api/process-groups/root/templates/upload" \
                 -H "Content-Type: multipart/form-data; charset=utf-8; boundary=__X_PAW_BOUNDARY__" \
                 -k \
                 --form template=@template.xml'
      register: response 

    - name: Get list of available NiFi resources for fetching the id of the template by its name
      uri:
        url: http://localhost:8080/nifi-api/resources
        method: Get
      register: nifi_resources 

    - name: Initiate the template 
      vars:
        template_id: "{{ nifi_resources.json  | to_json | from_json | json_query(query) | first}}"
      uri:
        url: http://localhost:8080/nifi-api/process-groups/root/template-instance
        method: POST
        body:
          "originX": 2.0
          "originY": 3.0 
          "templateId": "{{template_id.split('/')[2]}}"
        status_code: 201
        body_format: json
      register: pipeline_info


    - name: Set pipeline id property value 
      set_stats:
        data:
          id: "{{ pipeline_info.json.flow.processGroups[0].id }}"

