tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.aws.AwsApiGateway:
    derived_from: radon.nodes.abstract.ApiGateway
    metadata:
      targetNamespace: "radon.nodes.aws"
      abstract: "false"
      final: "false"
    attributes:
      arn:
        type: string
    properties:
      role_name:
        type: string
        description: The name of the aws role
        required: true
        status: supported
      api_gateway_title:
        type: string
        description: Name of the API gateway region
        required: true
        status: supported
      api_gateway_resource_uri:
        type: string
        description: URI of the resource to connect to API Gateway
        required: true
        status: supported
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: radon.nodes.aws.AwsPlatform
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
      - invoker:
          capability: radon.capabilities.Invocable
          node: radon.nodes.aws.AwsLambdaFunction
          relationship: radon.relationships.aws.AwsTriggers
          occurrences: [ 0, UNBOUNDED ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          role_name:
            type: string
            required: true
            default: { get_property: [ SELF, role_name ] }
          lambda_function_arn:
            type: string
            required: true
            default: { get_attribute: [ SELF, invoker, arn ] }
          aws_region:
            type: string
            required: true
            default: { get_property: [ SELF, host, region ] }
          function_name:
            type: string
            required: true
            default: { get_property: [ SELF, invoker, name ] }
          api_gateway_title:
            type: string
            required: true
            default: { get_property: [ SELF, api_gateway_title ] }
          api_gateway_resource_uri:
            type: string
            required: true
            default: { get_property: [ SELF, api_gateway_resource_uri ] }
          aws_role:
            type: string
            required: true
            default: { get_attribute: [ SELF, invoker, role_arn ] }
        operations:
          create:
            implementation:
              primary: create
              dependencies: [ swagger ]
              timeout: 0
    artifacts:
      create:
        type: radon.artifacts.Ansible
        file: create.yml
      swagger:
        type: tosca.artifacts.File
        file: swagger_template.yaml
