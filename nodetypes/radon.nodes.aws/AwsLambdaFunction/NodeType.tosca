tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.aws.AwsLambdaFunction:
    derived_from: radon.nodes.abstract.Function
    attributes:
      arn:
        type: string
    properties:
      role_name:
        type: string
      role_description:
        type: string
        required: false
      runtime:
        type: string
        default: nodejs
        constraints:
          - valid_values: [nodejs, nodejs4.3, nodejs6.10, nodejs8.10, nodejs10.x, java8, python2.7, python3.6, python3.7, dotnetcore1.0, dotnetcore2.0, dotnetcore2.1, nodejs4.3-edge, go1.x, ruby2.5]
      handler:
        type: string
        default: index.handler
      memory:
        description: Size in megabytes
        type: integer
        default: 128
        constraints:
          - in_range: [128, 3008]
      timeout:
        description: Time in seconds
        type: integer
        default: 3
        constraints:
          - in_range: [1, 900]
      schedule:
        type: string
        required: false
    capabilities:
      invocable:
        type: radon.capabilities.Invocable
        occurrences: [0, UNBOUNDED]
    interfaces:
      Standard:
        inputs:
          function_name:
            default: { get_property: [ SELF, name ] }
          function_role_name:
            default: { get_property: [ SELF, role_name ] }
          function_role_description:
            default: { get_property: [ SELF, role_description ] }
          function_runtime:
            default: { get_property: [ SELF, runtime ] }
          function_handler:
            default: { get_property: [ SELF, handler ] }
          function_memory:
            type: integer
            default: { get_property: [ SELF, memory ] }
          function_timeout:
            type: integer
            default: { get_property: [ SELF, timeout ] }
          function_code_location:
            type: string
          aws_access_key_id:
            default: { get_property: [ HOST, access_key_id ] }
          aws_secret_access_key:
            default: { get_property: [ HOST, secret_access_key ] }
          aws_region:
            default: { get_property: [ HOST, region ] }
          schedule:
            type: string
            default: { get_property: [SELF, schedule] }
        create: files/create.yml
        delete: files/delete.yml
