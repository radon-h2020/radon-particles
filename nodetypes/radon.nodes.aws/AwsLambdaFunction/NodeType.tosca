tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.aws.AwsLambdaFunction:
    derived_from: radon.nodes.abstract.Function
    metadata:
      abstract: "false"
      final: "false"
      targetNamespace: "radon.nodes.aws"
    attributes:
      arn:
        type: string
    properties:
      role_name:
        type: string
        required: true
        status: supported
      handler:
        type: string
        required: true
        default: "index.handler"
        status: supported
      schedule:
        type: string
        required: false
        status: supported
      memory:
        type: integer
        description: Size in megabytes
        required: true
        default: 128
        status: supported
        constraints:
          - in_range: [ 128,3008 ]
      runtime:
        type: string
        required: true
        default: "nodejs"
        status: supported
        constraints:
          - valid_values: [ nodejs,nodejs4.3,nodejs6.10,nodejs8.10,nodejs10.x,java8,python2.7,python3.6,python3.7,dotnetcore1.0,dotnetcore2.0,dotnetcore2.1,nodejs4.3-edge,go1.x,ruby2.5 ]
      timeout:
        type: integer
        description: Time in seconds
        required: true
        default: 3
        status: supported
        constraints:
          - in_range: [ 1,900 ]
      role_description:
        type: string
        required: false
        status: supported
    requirements:
      - endpoint:
          capability: tosca.capabilities.Endpoint
          relationship: tosca.relationships.ConnectsTo
          occurrences: [ 0, UNBOUNDED ]
    capabilities:
      invocable:
        occurrences: [ 0, UNBOUNDED ]
        type: radon.capabilities.Invocable
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          function_code_location:
            type: string
            required: true
          function_memory:
            type: integer
            required: true
            default: "{ get_property: [SELF, memory] }"
          schedule:
            type: string
            required: true
            default: "{ get_property: [SELF, schedule] }"
          function_timeout:
            type: integer
            required: true
            default: "{ get_property: [SELF, timeout] }"
          aws_access_key_id:
            type: string
            required: true
            default: "{ get_property: [HOST, access_key_id] }"
          aws_region:
            type: string
            required: true
            default: "{ get_property: [HOST, region] }"
          function_role_name:
            type: string
            required: true
            default: "{ get_property: [SELF, role_name] }"
          function_handler:
            type: string
            required: true
            default: "{ get_property: [SELF, handler] }"
          aws_secret_access_key:
            type: string
            required: true
            default: "{ get_property: [HOST, secret_access_key] }"
          function_name:
            type: string
            required: true
            default: "{ get_property: [SELF, name] }"
          function_runtime:
            type: string
            required: true
            default: "{ get_property: [SELF, runtime] }"
          function_role_description:
            type: string
            required: true
            default: "{ get_property: [SELF, role_description] }"
