tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  example.org.tosca.nodetypes.OpenFaaS_w1-wip1:
    derived_from: radon.nodes.datapipeline.process.FaaSFunction
    metadata:
      targetNamespace: "example.org.tosca.nodetypes"
      abstract: "false"
      final: "false"
    attributes:
      id:
        description: Unique ID of the pipeline
        type: string
      pipeline_type:
        description: Type of the pipeline.
        type: string
    properties:
      content_type:
        type: string
        description: The type of the content (text/html, text/plain, image/jpeg, ... )
        required: false
        status: supported
      schedulingStrategy:
        type: string
        description: Either EVENT_DRIVEN (default) or CRON_DRIVEN. EVENT_DRIVEN is similar with TIMER_DRIVEN with 0 sec value in NiFi.
        required: false
        default: "EVENT_DRIVEN"
        status: supported
      function_URL:
        type: string
        description: Remote URL of the OpenFaaS function
        required: true
        status: supported
      schedulingPeriodCRON:
        type: string
        description: For CRON_DRIVEN give in CRON syntax.
        required: false
        default: "* * * * * ?"
        status: supported
      HTTP_method:
        type: string
        description: Function invokation method
        required: false
        default: "POST"
        status: supported
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          stop:
          start:
          create:
            inputs:
              template_file:
                type: string
                required: true
            implementation:
              primary: create
              timeout: 0
          configure:
          delete:
    artifacts:
      stop:
        type: tosca.artifacts.File
        file: stop.yml
      templateFile_localConn:
        type: tosca.artifacts.File
        file: FaaS_localConn.xml
      start:
        type: tosca.artifacts.File
        file: start.yml
      create:
        type: tosca.artifacts.File
        file: create.yml
      configure:
        type: tosca.artifacts.File
        file: configure.yml
      delete:
        type: tosca.artifacts.File
        file: delete.yml
