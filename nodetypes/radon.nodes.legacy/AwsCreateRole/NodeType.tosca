tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.legacy.AwsCreateRole:
    derived_from: tosca.nodes.SoftwareComponent
    metadata:
      targetNamespace: "radon.nodes.legacy"
      abstract: "false"
      final: "false"
    attributes:
      role_arn:
        description: AWS role arn identifier
        type: string
    properties:
      role_name:
        type: string
        required: true
        status: supported
      aws_region:
        type: string
        required: true
        status: supported
      role_description:
        type: string
        required: true
        status: supported
    capabilities:
      requires_role:
        occurrences: [ 1, UNBOUNDED ]
        valid_source_types: [ radon.nodes.legacy.AwsLambdaFunction ]
        type: tosca.capabilities.Compute
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          role_name:
            type: string
            required: true
            default: { get_property: [ SELF, role_name ] }
          aws_region:
            type: string
            required: true
            default: { get_property: [ SELF, aws_region ] }
          role_description:
            type: string
            required: true
            default: { get_property: [ SELF, role_description ] }
        operations:
          create:
            implementation:
              primary: create_role
              dependencies: [ policy ]
              timeout: 0
    artifacts:
      create_role:
        type: radon.artifacts.Ansible
        file: create_role.yml
      policy:
        type: tosca.artifacts.File
        file: policy.json
