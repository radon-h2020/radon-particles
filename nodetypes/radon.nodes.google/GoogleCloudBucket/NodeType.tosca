tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.google.GoogleCloudBucket:
    derived_from: radon.nodes.abstract.ObjectStorage
    metadata:
      targetNamespace: "radon.nodes.google"
      abstract: "false"
      final: "false"
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: radon.nodes.google.GoogleCloudPlatform
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
      - invoker:
          capability: radon.capabilities.Invocable
          node: radon.nodes.google.GoogleCloudBucketTriggeredFunction
          relationship: radon.relationships.google.GoogleCloudTriggers
          occurrences: [ 0, UNBOUNDED ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          bucket_location:
            type: string
            required: true
            default: { get_property: [ SELF, host, region ] }
          project_id:
            type: string
            required: true
            default: { get_property: [ SELF, host, project_id ] }
          bucket_name:
            type: string
            required: true
            default: { get_property: [ SELF, name ] }
          service_account_file:
            type: string
            required: true
            default: { get_input: service_account_file }
        operations:
          create:
            description: The standard create operation
            implementation:
              primary: create
              timeout: 0
          delete:
            description: The standard delete operation
            implementation:
              primary: delete
              timeout: 0
    artifacts:
      create:
        type: radon.artifacts.Ansible
        file: create.yml
      delete:
        type: radon.artifacts.Ansible
        file: delete.yml
