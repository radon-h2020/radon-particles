  ##########################################################################
  # Copyright (c) 2019 Contributors to the RADON project
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  ##########################################################################
---
- hosts: all
  vars:
    query: "resources[?name=='ListS3'].identifier"
    query_fetchS3: "resources[?name=='FetchS3Object'].identifier"
    query_putS3: "resources[?name=='PutS3Object'].identifier"
    query_PutLambda: "resources[?name=='PutLambda'].identifier"
    # Below variable indicates where to store the credential file in the remote machine
    dest_cred_file_path: "/tmp/credentials"
  tasks:
    - name: Upload the credentials file to the current directory.
      copy:
        src: "{{ cred_file_path }}"
        dest: "{{ dest_cred_file_path }}"
      when: cred_file_path != "none" or cred_file_path != "None"
    - name: Get list of available NiFi resources for fetching the id of the listS3, FetchS3Object, PutS3Object
      uri:
        url: http://localhost:8080/nifi-api/resources/
        method: Get
      register: nifi_resources
      when: cred_file_path != "none" or cred_file_path != "None"
## FOR ListS3
    # we need to access each component one-by-one and configure them by setting the credential file path
    - name: set the ecredential file path for ListS3
      vars:
        # get the listS3Id. Example: "/processors/22549d16-e4c8-3f23-b949-af4aca95a3aa"
        # we need to extract only the ID, which is at the end
        lists3_ID: "{{ nifi_resources.json  | to_json | from_json | json_query(query) | first }}"
      uri:
        url: "http://localhost:8080/nifi-api/processors/{{ lists3_ID.split('/')[2] }}"
        method: PUT
        body:
          "revision": {"version": 0}
          "component":
            "id": "{{ lists3_ID.split('/')[2] }}"
            "config":
              "properties": {"Credentials File": "{{ dest_cred_file_path }}"}
        status_code: 200
        body_format: json
      when: cred_file_path != "none" and object_name == "ListS3"
## FOR PutLambda
    - name: set the credential file path for PutLambda
      vars:
        # get the PutLambda. Example: "/processors/22549d16-e4c8-3f23-b949-af4aca95a3aa"
        # we need to extract only the ID, which is at the end
        PutLambda_ID: "{{ nifi_resources.json  | to_json | from_json | json_query(query_PutLambda) | first }}"
      uri:
        url: "http://localhost:8080/nifi-api/processors/{{ PutLambda_ID.split('/')[2] }}"
        method: PUT
        body:
          "revision": {"version": 0}
          "component":
            "id": "{{ PutLambda_ID.split('/')[2] }}"
            "config":
              "properties": {"Credentials File": "{{ dest_cred_file_path }}"}
        status_code: 200
        body_format: json
      when: cred_file_path != "none" and object_name == "invokeLambda"
## FOR FetchS3Object
    - name: set the ecredential file path for FetchS3Object
      vars:
        FetchS3ObjectID: "{{ nifi_resources.json  | to_json | from_json | json_query(query_fetchS3) | first }}"
      uri:
        url: "http://localhost:8080/nifi-api/processors/{{ FetchS3ObjectID.split('/')[2] }}"
        method: PUT
        body:
          "revision": {"version": 0}
          "component":
            "id": "{{ FetchS3ObjectID.split('/')[2] }}"
            "config":
              "properties": {"Credentials File": "{{ dest_cred_file_path }}"}
        status_code: 200
        body_format: json
      when: cred_file_path != "none" and object_name == "ListS3"
## FOR PutS3Object
    - name: fetch the revision information of the processor (PutS3Object)
      vars:
        PutS3ObjectID: "{{ nifi_resources.json  | to_json | from_json | json_query(query_putS3) | first }}"
      uri:
        url: "http://localhost:8080/nifi-api/processors/{{ PutS3ObjectID.split('/')[2] }}"
        method: GET
      register: revisionInfo
      when: cred_file_path != "none" and object_name == "PutS3Object"
    - name: set the credential file path for PutS3Object
      vars:
        PutS3ObjectID: "{{ nifi_resources.json  | to_json | from_json | json_query(query_putS3) | first }}"
      uri:
        url: "http://localhost:8080/nifi-api/processors/{{ PutS3ObjectID.split('/')[2] }}"
        method: PUT
        body:
          "revision": "{{ revisionInfo.json.revision }}"
          "component":
            "id": "{{ PutS3ObjectID.split('/')[2] }}"
            "config":
              "properties": {"Credentials File": "{{ dest_cred_file_path }}"}
        # status_code: 201
        body_format: json
      when: cred_file_path != "none" and object_name == "PutS3Object"
