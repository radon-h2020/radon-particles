tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.datapipeline.PipelineBlock:
    derived_from: radon.nodes.abstract.DataPipeline
    metadata:
      targetNamespace: "radon.nodes.datapipeline"
      abstract: "true"
      final: "false"
    attributes:
      id:
        type: string
    properties:
      schedulingStrategy:
        type: string
        description: Either EVENT_DRIVEN (default) or CRON_DRIVEN. EVENT_DRIVEN is similar with TIMER_DRIVEN with 0 sec value in NiFi.
        required: false
        default: "EVENT_DRIVEN"
      schedulingPeriodCRON:
        type: string
        description: For CRON_DRIVEN give in CRON syntax.
        required: false
        default: "* * * * * ?"
      name:
        type: string
        description: Name of the pipeline node
        required: false
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          schedulingStrategy:
            type: string
            required: false
            default: { get_property: [ SELF, schedulingStrategy ] }
          schedulingPeriodCRON:
            type: string
            required: true
            default: { get_property: [ SELF, schedulingPeriodCRON ] }
        operations:
          stop:
            inputs:
              pipeline_id:
                type: string
                required: true
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: stop
              timeout: 0
          start:
            inputs:
              pipeline_id:
                type: string
                required: true
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: start
              timeout: 0
          delete:
            inputs:
              pipeline_id:
                type: string
                required: true
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: delete
              timeout: 0
    artifacts:
      stop:
        type: tosca.artifacts.File
        file: stop.yml
      start:
        type: tosca.artifacts.File
        file: start.yml
      delete:
        type: tosca.artifacts.File
        file: delete.yml
