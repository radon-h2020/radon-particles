tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  example.org.tosca.nodetypes.OpenFaaS:
    derived_from: radon.nodes.datapipeline.process.FaaSFunction
    metadata:
      targetNamespace: "radon.nodes.datapipeline.process"
      abstract: "false"
      final: "false"
    attributes:
      id:
        description: Unique ID of the pipeline
        type: string
      pipeline_type:
        description: type of the pipeline. e.g. processor, process-groups, inputPorts, RPG etc
        type: string
    properties:
      content_type:
        type: string
        description: The type of the content (text/html, text/plain, image/jpeg, ... )
      function_URL:
        type: string
        description: Remote URL of the OpenFaaS function
      HTTP_method:
        type: string
        description: Function invokation method.
        required: false
        default: "POST"
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          stop:
            inputs:
              pipeline_id:
                type: string
                required: false
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: stop
              timeout: 0
          start:
            inputs:
              pipeline_id:
                type: string
                required: false
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: start
              timeout: 0
          create:
            inputs:
              template_name:
                type: string
                required: true
                default: { get_property: [ SELF, template_name ] }
              template_file:
                type: string
                required: true
                default: "FaaS_localConn.xml"
            implementation:
              primary: create
              timeout: 0
          configure:
            inputs:
              content_type:
                type: string
                required: false
                default: { get_property: [ SELF, content_type ] }
              schedulingStrategy:
                type: string
                required: false
                default: { get_property: [ SELF, schedulingStrategy ] }
              function_URL:
                type: string
                required: false
                default: { get_property: [ SELF, function_URL ] }
              schedulingPeriodCRON:
                type: string
                required: false
                default: { get_property: [ SELF, schedulingPeriodCRON ] }
              pipeline_id:
                type: string
                required: false
                default: { get_attribute: [ SELF, id ] }
              HTTP_method:
                type: string
                required: false
                default: { get_property: [ SELF, HTTP_method ] }
            implementation:
              primary: configure
              timeout: 0
          delete:
            inputs:
              pipeline_id:
                type: string
                required: false
                default: { get_attribute: [ SELF, id ] }
            implementation:
              primary: delete
              timeout: 0
    artifacts:
      stop:
        type: tosca.artifacts.File
        file: stop.yml
      templateFile_localConn:
        type: tosca.artifacts.File
        file: FaaS_localConn.xml
      start:
        type: tosca.artifacts.File
        file: start.yml
      create:
        type: tosca.artifacts.File
        file: create.yml
      configure:
        type: tosca.artifacts.File
        file: configure.yml
      delete:
        type: tosca.artifacts.File
        file: delete.yml
